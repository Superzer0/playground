name: Deploy on Azure

on:
  workflow_dispatch: {}

#Environment variables https://docs.github.com/en/actions/learn-github-actions/environment-variables
env:
  TEMPLATE-FILE: infra/webapp.bicep

jobs:
  #Build, test and publish .net web project in repository
  deploy-build:
    name: Build for Deployment
    runs-on: ubuntu-latest
    steps:
    #checkout the repository
    - uses: actions/checkout@v4.2.1
      name: 'Checkout'
      with:
        show-progress: true
        fetch-depth: 1
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./dotnet/mvc-app
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./dotnet/mvc-app
    - name: Publish
      run: dotnet publish --output $GITHUB_WORKSPACE/app-publish --configuration Release --no-restore
      working-directory: ./dotnet/mvc-app
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-publish
        path: '${{ github.workspace}}/app-publish'
      # upload the bicep template as artifacts for next job
    - name: Upload bicep for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: bicep-template
        path: ${{ env.TEMPLATE-FILE }}
    # upload the bicep template as artifacts for next job

  # Use Bicep to deploy infrastructure + Publish webapp
  deploy:
    name: Deploy on Azure
    runs-on: ubuntu-latest
    needs: deploy-build
    env:
      APP_NAME: app-mvc-${{ vars.ENVIRONMENT }}-${{ vars.LOCATION_CODE }}
      RG_NAME: rg-mvc-app-${{ vars.ENVIRONMENT }}-${{ vars.LOCATION_CODE }}
    environment:
      name: dev
    steps:
    #Download the publish files created in previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: app-publish
        path: app-publish

    #Download the bicep templates from previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: bicep-template
        path: bicep-template

   #Login in your azure subscription using a service principal (credentials stored as GitHub Secret in repo)
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Deploy Azure WebApp using Bicep file
    - name: deploy
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RG_NAME }}
        template: bicep-template/webapp.bicep
        parameters: 'webAppName=${{ env.APP_NAME }} location=${{ vars.LOCATION }}'
        failOnStdErr: false
        scope: resourcegroup

    # Publish website to Azure App Service using CLI (WebApp)
    - name: Publish Website to WebApp
      uses: Azure/cli@v2
      with:
        inlineScript: |
             cd ./app-publish
             zip -r ../app.zip .
             az webapp deploy --name ${{ env.APP_NAME }} --resource-group ${{ env.RG_NAME }} --src-path ./app.zip --type zip
