name: Deploy on Azure

on:
  workflow_dispatch:
    inputs:
      appEnv:
        type: choice
        description: Application environment setting
        options:
          - Development
          - Production
jobs:
  #Build, test and publish .net web project in repository
  call-dotnet-build:
    uses: ./.github/workflows/mvc-app-build-tmpl.yml
    secrets: inherit
  # Use Bicep to deploy infrastructure + Publish webapp
  deploy:
    permissions:
      contents:  read
      deployments:  write
      checks: write
      id-token: write
    name: Deploy on Azure
    runs-on: ubuntu-latest
    needs: call-dotnet-build
    env:
      APP_NAME: app-mvc-${{ vars.ENVIRONMENT }}-${{ vars.LOCATION_CODE }}
      RG_NAME: rg-mvc-app-${{ vars.ENVIRONMENT }}-${{ vars.LOCATION_CODE }}
    environment:
      name: dev
    steps:
    #Download the publish files created in previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: app-publish
        path: app-publish

    #Download the bicep templates from previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: bicep-template
        path: bicep-template

   #Login in your azure subscription using a service principal (credentials stored as GitHub Secret in repo)
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Deploy Azure WebApp using Bicep file
    - name: deploy
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RG_NAME }}
        template: bicep-template/webapp.bicep
        parameters: 'webAppName=${{ env.APP_NAME }} location=${{ vars.LOCATION }} appEnv=${{ github.event.inputs.appEnv }}'
        failOnStdErr: false
        scope: resourcegroup

    - name: ZIP artifacts
      run: |
        cd ./app-publish
        zip -r ../app.zip .

    - name: Publish Website to WebApp
      uses: Azure/cli@v2
      with:
        inlineScript: |
             az webapp deploy --name ${{ env.APP_NAME }} --resource-group ${{ env.RG_NAME }} --src-path ./app.zip --type zip
